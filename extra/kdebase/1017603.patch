Index: apps/konsole/src/SessionController.cpp
===================================================================
--- apps/konsole/src/SessionController.cpp	(Revision 1017602)
+++ apps/konsole/src/SessionController.cpp	(Revision 1017603)
@@ -95,13 +95,11 @@
     Q_ASSERT( view );
 
     // handle user interface related to session (menus etc.)
+    if (isKonsolePart())
+        setXMLFile("konsole/partui.rc");
+    else
+        setXMLFile("konsole/sessionui.rc");
 
-#ifdef KONSOLE_PART
-    setXMLFile("konsole/partui.rc");
-#else
-    setXMLFile("konsole/sessionui.rc");
-#endif
-
     setupActions();
     actionCollection()->addAssociatedWidget(view);
     foreach (QAction* action, actionCollection()->actions())
@@ -1041,6 +1039,15 @@
     }
 }
 
+bool SessionController::isKonsolePart() const
+{
+    // Check to see if we are being called from Konsole or a KPart
+    if (QString(kapp->metaObject()->className()) == "Konsole::Application")
+        return false;
+    else
+        return true;
+}
+
 SessionTask::SessionTask(QObject* parent)
     :  QObject(parent)
     ,  _autoDelete(false)
Index: apps/konsole/src/SessionController.h
===================================================================
--- apps/konsole/src/SessionController.h	(Revision 1017602)
+++ apps/konsole/src/SessionController.h	(Revision 1017603)
@@ -209,6 +209,9 @@
 
     void updateSearchFilter();
 
+    /* Returns true if called within a KPart; false if called within Konsole. */
+    bool isKonsolePart() const;
+
 private:
     // begins the search
     // text - pattern to search for
