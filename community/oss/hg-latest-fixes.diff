# HG changeset patch
# User Hannu Savolainen <hannu@opensound.com>
# Date 1231266055 -7200
# Node ID 4d7a70a0ac9fce84a48dff44d7669cccc3d27369
# Parent  90a443c7dbdc5c7108a03819fbae93e1bce7c7a7
Added dedicated mixer driver for Asus Eee PC (incomplete)

diff -r 90a443c7dbdc -r 4d7a70a0ac9f kernel/drv/oss_hdaudio/hdaudio_codecids.h
--- a/kernel/drv/oss_hdaudio/hdaudio_codecids.h	Mon Jan 05 17:42:33 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_codecids.h	Tue Jan 06 20:20:55 2009 +0200
@@ -1031,6 +1031,7 @@
 extern int hdaudio_vaio_vgn_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 extern int hdaudio_thinkpad_r61_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 extern int hdaudio_mac_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
+extern int hdaudio_eeepc_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 
 static const codec_desc_t subdevices[] = {
   {0x98801019, "ECS 915P-A", VF_NONE, NULL, 0x76541320},
@@ -1082,6 +1083,11 @@
   {0x17aa20bb, "Thinkpad R61", VF_NONE, (char**) &ad1984remap, 0, hdaudio_thinkpad_r61_mixer_init},
 
 /*
+ * Asus Eee PC (model 900 at least)
+ */
+  {0x10438337, "Asus Eee PC", VF_NONE, NULL, 0, hdaudio_eeepc_mixer_init},
+
+/*
  * Known Macintosh systems
  */
   {0x106b0800, "Intel Mac V1", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
diff -r 90a443c7dbdc -r 4d7a70a0ac9f kernel/drv/oss_hdaudio/hdaudio_eeepc.c
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/kernel/drv/oss_hdaudio/hdaudio_eeepc.c	Tue Jan 06 20:20:55 2009 +0200
@@ -0,0 +1,259 @@
+#define COPYING Copyright (C) 4Front Technologies 2007. All rights reserved.
+/* Codec index is 0 */
+/* Codec vendor 10ec:0662 */
+/* HD codec revision 1.0 (1.1) (0x00100101) */
+/* Subsystem ID 10438337 */
+/* Default amplifier caps: in=00000000, out=00000000 */
+#include "oss_hdaudio_cfg.h"
+#include "hdaudio.h"
+#include "hdaudio_codec.h"
+#include "hdaudio_dedicated.h"
+
+int
+hdaudio_eeepc_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group)
+{
+  int ctl=0;
+
+  DDB(cmn_err(CE_CONT, "hdaudio_eeepc_mixer_init got called.\n"));
+
+  /* Handle PIN widgets */
+  {
+	int n, group, pin_group;
+
+	n=0;
+
+	HDA_GROUP(pin_group, top_group, "jack");
+
+	if (HDA_PIN_GROUP(0x14, group, pin_group, "int-speaker", n, "jack", 4))	/* Pin widget 0x14 */
+	   {
+		/* Src 0xc=front */
+		if (HDA_PINSELECT(0x14, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "front-out input");
+		HDA_OUTMUTE(0x14, group, "inmute", UNMUTE);
+	   }
+
+	if (HDA_PIN_GROUP(0x15, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x15 */
+	   {
+		/* Src 0xd=rear */
+		if (HDA_PINSELECT(0x15, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "rear-out input");
+		HDA_OUTMUTE(0x15, group, "inmute", UNMUTE);
+	   }
+
+	if (HDA_PIN_GROUP(0x16, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x16 */
+	   {
+		/* Src 0xe=c/lfe */
+		if (HDA_PINSELECT(0x16, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "c/lfe-out input");
+		HDA_OUTMUTE(0x16, group, "inmute", UNMUTE);
+	   }
+
+	if (HDA_PIN_GROUP(0x18, group, pin_group, "pink", n, "jack", 4))	/* Pin widget 0x18 */
+	   {
+		/* Src 0xe=c/lfe */
+		if (HDA_PINSELECT(0x18, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "c/lfe-out input");
+		HDA_OUTMUTE(0x18, group, "inmute", UNMUTE);
+		HDA_INAMP(0x18, 0, group, "out", 90);	/* From widget 0x0e */
+	   }
+
+	if (HDA_PIN_GROUP(0x19, group, pin_group, "int-mic", n, "jack", 4))	/* Pin widget 0x19 */
+	   {
+		/* Src 0xc=front */
+		/* Src 0xe=c/lfe */
+		if (HDA_PINSELECT(0x19, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "front-out c/lfe-out input");
+		HDA_OUTMUTE(0x19, group, "inmute", UNMUTE);
+		HDA_INAMP(0x19, 0, group, "out", 90);	/* From widget 0x0c */
+	   }
+
+	if (HDA_PIN_GROUP(0x1a, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x1a */
+	   {
+		/* Src 0xd=rear */
+		if (HDA_PINSELECT(0x1a, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "rear-out input");
+		HDA_OUTMUTE(0x1a, group, "inmute", UNMUTE);
+	   }
+
+	if (HDA_PIN_GROUP(0x1b, group, pin_group, "green", n, "jack", 4))	/* Pin widget 0x1b */
+	   {
+		/* Src 0xc=front */
+		/* Src 0xe=c/lfe */
+		if (HDA_PINSELECT(0x1b, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "front-out c/lfe-out input");
+		HDA_OUTMUTE(0x1b, group, "inmute", UNMUTE);
+		HDA_INAMP(0x1b, 0, group, "out", 90);	/* From widget 0x0c */
+	   }
+
+	if (HDA_PIN_GROUP(0x1c, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x1c */
+	   {
+		if (HDA_PINSELECT(0x1c, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "input");
+	   }
+
+	if (HDA_PIN_GROUP(0x1d, group, pin_group, "purple", n, "jack", 4))	/* Pin widget 0x1d */
+	   {
+		if (HDA_PINSELECT(0x1d, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "input");
+	   }
+  }
+  /* Handle ADC widgets */
+  {
+	int n, group, rec_group;
+
+	n=0;
+
+	HDA_GROUP(rec_group, top_group, "record");
+
+	if (HDA_ADC_GROUP(0x08, group, rec_group, "mix", n, "record", 4))	/* ADC widget 0x08 */
+	   {
+		/* Src 0x23=mix */
+		HDA_INAMP(0x08, 0, group, "mix", 90);	/* From widget 0x23 */
+
+		/* Widget 0x23 (mix) */
+		/* Src 0x18=pink */
+		/* Src 0x19=int-mic */
+		/* Src 0x1a=black */
+		/* Src 0x1b=green */
+		/* Src 0x1c=black */
+		/* Src 0x1d=purple */
+		/* Src 0x14=int-speaker */
+		/* Src 0x15=black */
+		/* Src 0x16=black */
+		/* Src 0xb=mix */
+		{
+			int amp_group;
+
+			HDA_GROUP(amp_group, group, "mute");
+			HDA_INMUTE(0x23, 0, amp_group, "pink", UNMUTE);	/* From widget 0x18 */
+			HDA_INMUTE(0x23, 1, amp_group, "int-mic", UNMUTE);	/* From widget 0x19 */
+			HDA_INMUTE(0x23, 2, amp_group, "black", UNMUTE);	/* From widget 0x1a */
+			HDA_INMUTE(0x23, 3, amp_group, "green", UNMUTE);	/* From widget 0x1b */
+			HDA_INMUTE(0x23, 4, amp_group, "black", UNMUTE);	/* From widget 0x1c */
+			HDA_INMUTE(0x23, 5, amp_group, "purple", UNMUTE);	/* From widget 0x1d */
+			HDA_INMUTE(0x23, 6, amp_group, "int-speaker", UNMUTE);	/* From widget 0x14 */
+			HDA_INMUTE(0x23, 7, amp_group, "black", UNMUTE);	/* From widget 0x15 */
+			HDA_INMUTE(0x23, 8, amp_group, "black", UNMUTE);	/* From widget 0x16 */
+			HDA_INMUTE(0x23, 9, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+		}
+	   }
+
+	if (HDA_ADC_GROUP(0x09, group, rec_group, "mix", n, "record", 4))	/* ADC widget 0x09 */
+	   {
+		/* Src 0x22=mix */
+		HDA_INAMP(0x09, 0, group, "mix", 90);	/* From widget 0x22 */
+
+		/* Widget 0x22 (mix) */
+		/* Src 0x18=pink */
+		/* Src 0x19=int-mic */
+		/* Src 0x1a=black */
+		/* Src 0x1b=green */
+		/* Src 0x1c=black */
+		/* Src 0x1d=purple */
+		/* Src 0x14=int-speaker */
+		/* Src 0x15=black */
+		/* Src 0x16=black */
+		/* Src 0xb=mix */
+		{
+			int amp_group;
+
+			HDA_GROUP(amp_group, group, "mute");
+			HDA_INMUTE(0x22, 0, amp_group, "pink", UNMUTE);	/* From widget 0x18 */
+			HDA_INMUTE(0x22, 1, amp_group, "int-mic", UNMUTE);	/* From widget 0x19 */
+			HDA_INMUTE(0x22, 2, amp_group, "black", UNMUTE);	/* From widget 0x1a */
+			HDA_INMUTE(0x22, 3, amp_group, "green", UNMUTE);	/* From widget 0x1b */
+			HDA_INMUTE(0x22, 4, amp_group, "black", UNMUTE);	/* From widget 0x1c */
+			HDA_INMUTE(0x22, 5, amp_group, "purple", UNMUTE);	/* From widget 0x1d */
+			HDA_INMUTE(0x22, 6, amp_group, "int-speaker", UNMUTE);	/* From widget 0x14 */
+			HDA_INMUTE(0x22, 7, amp_group, "black", UNMUTE);	/* From widget 0x15 */
+			HDA_INMUTE(0x22, 8, amp_group, "black", UNMUTE);	/* From widget 0x16 */
+			HDA_INMUTE(0x22, 9, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+		}
+	   }
+  }
+  /* Handle misc widgets */
+  {
+	int n, group, misc_group;
+
+	n=0;
+
+	HDA_GROUP(misc_group, top_group, "misc");
+
+	if (HDA_MISC_GROUP(0x02, group, misc_group, "front", n, "misc", 8))	/* Misc widget 0x02 */
+	   {
+		HDA_OUTAMP(0x02, group, "-", 90);
+	   }
+
+	if (HDA_MISC_GROUP(0x03, group, misc_group, "rear", n, "misc", 8))	/* Misc widget 0x03 */
+	   {
+		HDA_OUTAMP(0x03, group, "-", 90);
+	   }
+
+	if (HDA_MISC_GROUP(0x04, group, misc_group, "center/LFE", n, "misc", 8))	/* Misc widget 0x04 */
+	   {
+		HDA_OUTAMP(0x04, group, "-", 90);
+	   }
+
+	if (HDA_MISC_GROUP(0x0b, group, misc_group, "mix", n, "misc", 8))	/* Misc widget 0x0b */
+	   {
+		/* Src 0x18=c/lfe */
+		/* Src 0x19=int-mic */
+		/* Src 0x1a=rear */
+		/* Src 0x1b=headphone */
+		/* Src 0x1c=speaker */
+		/* Src 0x1d=speaker */
+		/* Src 0x14=front */
+		/* Src 0x15=rear */
+		/* Src 0x16=c/lfe */
+		HDA_INAMP(0x0b, 0, group, "pink", 90);	/* From widget 0x18 */
+		HDA_INAMP(0x0b, 1, group, "int-mic", 90);	/* From widget 0x19 */
+		HDA_INAMP(0x0b, 2, group, "black", 90);	/* From widget 0x1a */
+		HDA_INAMP(0x0b, 3, group, "green", 90);	/* From widget 0x1b */
+		HDA_INAMP(0x0b, 4, group, "black", 90);	/* From widget 0x1c */
+		HDA_INAMP(0x0b, 5, group, "purple", 90);	/* From widget 0x1d */
+		HDA_INAMP(0x0b, 6, group, "int-speaker", 90);	/* From widget 0x14 */
+		HDA_INAMP(0x0b, 7, group, "black", 90);	/* From widget 0x15 */
+		HDA_INAMP(0x0b, 8, group, "black", 90);	/* From widget 0x16 */
+	   }
+
+	if (HDA_MISC_GROUP(0x0c, group, misc_group, "front", n, "misc", 8))	/* Misc widget 0x0c */
+	   {
+		/* Src 0x2=front */
+		/* Src 0xb=mix */
+		{
+			int amp_group;
+
+			HDA_GROUP(amp_group, group, "mute");
+			HDA_INMUTE(0x0c, 0, amp_group, "front", UNMUTE);	/* From widget 0x02 */
+			HDA_INMUTE(0x0c, 1, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+		}
+	   }
+
+	if (HDA_MISC_GROUP(0x0d, group, misc_group, "rear", n, "misc", 8))	/* Misc widget 0x0d */
+	   {
+		/* Src 0x3=rear */
+		/* Src 0xb=mix */
+		{
+			int amp_group;
+
+			HDA_GROUP(amp_group, group, "mute");
+			HDA_INMUTE(0x0d, 0, amp_group, "rear", UNMUTE);	/* From widget 0x03 */
+			HDA_INMUTE(0x0d, 1, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+		}
+	   }
+
+	if (HDA_MISC_GROUP(0x0e, group, misc_group, "c/lfe", n, "misc", 8))	/* Misc widget 0x0e */
+	   {
+		/* Src 0x4=center/LFE */
+		/* Src 0xb=mix */
+		{
+			int amp_group;
+
+			HDA_GROUP(amp_group, group, "mute");
+			HDA_INMUTE(0x0e, 0, amp_group, "center/LFE", UNMUTE);	/* From widget 0x04 */
+			HDA_INMUTE(0x0e, 1, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+		}
+	   }
+  }
+  return 0;
+}
# HG changeset patch
# User Hannu Savolainen <hannu@opensound.com>
# Date 1231412849 -7200
# Node ID 9d67fab8fc2fa245b5fa50f19d24be8d4bfe93b5
# Parent  9475ac22d538bbcfa06343aefa0a8b0c4fb5ab6a
Improvements to Asus Eee PC mixer

diff -r 9475ac22d538 -r 9d67fab8fc2f kernel/drv/oss_hdaudio/hdaudio_codec.c
--- a/kernel/drv/oss_hdaudio/hdaudio_codec.c	Wed Jan 07 23:04:56 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_codec.c	Thu Jan 08 13:07:29 2009 +0200
@@ -3435,8 +3435,29 @@
       || widget->current_selector >= widget->nconn + 1)
     widget->current_selector = 0;
 
-  corb_write (mixer, widget->cad, widget->wid, 0, SET_SELECTOR,
-	      widget->current_selector);
+  if (widget->current_selector < widget->nconn)
+    {
+      /* Output source select */
+      corb_write (mixer, cad, wid, 0, SET_SELECTOR, widget->current_selector);
+      /* Enable output and HP amp. Set vref=Ground */
+      corb_write (mixer, cad, wid, 0, SET_PINCTL, 0xc0);
+    }
+  else
+    {
+      /* Input select
+       * Program the correct VRef Values
+       */
+
+      if (widget->pin_type == PIN_IN)	/* Line-in */
+	{
+	  corb_write (mixer, cad, wid, 0, SET_PINCTL, 0x20);	/*Ground*/
+	}
+      else		/* Mic-in */
+	{
+	  corb_write (mixer, cad, wid, 0, SET_PINCTL, 0x24);	/*Vref=8
+								   0% */
+	}
+    }
 
   return *ctl;
 }
@@ -3446,6 +3467,7 @@
 		      int value)
 {
   codec_t *codec;
+  widget_t *widget;
 
   if (cad < 0 || cad >= mixer->ncodecs)
     return;
@@ -3454,9 +3476,56 @@
   if (wid < 0 || wid >= codec->nwidgets)
     return;
 
+  widget = &codec->widgets[wid];
+
+  widget->current_selector = value;
+
   corb_write (mixer, cad, wid, 0, SET_SELECTOR, value);
 }
 
+void
+hda_codec_set_pinselect (int dev, hdaudio_mixer_t * mixer, int cad, int wid,
+		      int value)
+{
+  codec_t *codec;
+  widget_t *widget;
+
+  if (cad < 0 || cad >= mixer->ncodecs)
+    return;
+  codec = mixer->codecs[cad];
+
+  if (wid < 0 || wid >= codec->nwidgets)
+    return;
+
+  widget = &codec->widgets[wid];
+
+  widget->current_selector = value;
+
+  if (widget->current_selector < widget->nconn)
+    {
+      /* Output source select */
+      corb_write (mixer, cad, wid, 0, SET_SELECTOR, widget->current_selector);
+      /* Enable output and HP amp. Set vref=Ground */
+      corb_write (mixer, cad, wid, 0, SET_PINCTL, 0xc0);
+    }
+  else
+    {
+      /* Input select
+       * Program the correct VRef Values
+       */
+
+      if (widget->pin_type == PIN_IN)	/* Line-in */
+	{
+	  corb_write (mixer, cad, wid, 0, SET_PINCTL, 0x20);	/*Ground*/
+	}
+      else		/* Mic-in */
+	{
+	  corb_write (mixer, cad, wid, 0, SET_PINCTL, 0x24);	/*Vref=8
+								   0% */
+	}
+    }
+}
+
 int
 hda_codec_add_choices (int dev, hdaudio_mixer_t * mixer, int ctl,
 		       const char *choiselist)
diff -r 9475ac22d538 -r 9d67fab8fc2f kernel/drv/oss_hdaudio/hdaudio_dedicated.h
--- a/kernel/drv/oss_hdaudio/hdaudio_dedicated.h	Wed Jan 07 23:04:56 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_dedicated.h	Thu Jan 08 13:07:29 2009 +0200
@@ -47,10 +47,12 @@
 
 extern int hda_codec_add_select(int dev, hdaudio_mixer_t *mixer, int cad, int wid, int group, const char *name, int *ctl, int initial_select);
 extern void hda_codec_set_select(int dev, hdaudio_mixer_t *mixer, int cad, int wid, int value);
+extern void hda_codec_set_pinselect(int dev, hdaudio_mixer_t *mixer, int cad, int wid, int value);
 extern int hda_codec_add_pinselect(int dev, hdaudio_mixer_t *mixer, int cad, int wid, int group, const char *name, int *ctl, int initial_select);
 #define HDA_SELECT(wid, name, ctl, group, sel) hda_codec_add_select(dev, mixer, cad, wid, group, name, &ctl, sel)
 #define HDA_PINSELECT(wid, ctl, group, name, sel) hda_codec_add_pinselect(dev, mixer, cad, wid, group, name, &ctl, sel)
 #define HDA_SETSELECT(wid, value) hda_codec_set_select(dev, mixer, cad, wid, value)
+#define HDA_SET_PINSELECT(wid, value) hda_codec_set_pinselect(dev, mixer, cad, wid, value)
 
 extern int hda_codec_add_choices(int dev, hdaudio_mixer_t *mixer, int ctl, const char *choiselist);
 #define HDA_CHOICES(ctl, choicelist) hda_codec_add_choices(dev, mixer, ctl, choicelist)
diff -r 9475ac22d538 -r 9d67fab8fc2f kernel/drv/oss_hdaudio/hdaudio_eeepc.c
--- a/kernel/drv/oss_hdaudio/hdaudio_eeepc.c	Wed Jan 07 23:04:56 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_eeepc.c	Thu Jan 08 13:07:29 2009 +0200
@@ -1,4 +1,9 @@
-#define COPYING Copyright (C) 4Front Technologies 2007. All rights reserved.
+#define COPYING Copyright (C) 4Front Technologies 2009. All rights reserved.
+
+/*
+ * Purpose: Dedicated HDaudio mixer driver for Asus Eee PC
+ */
+
 /* Codec index is 0 */
 /* Codec vendor 10ec:0662 */
 /* HD codec revision 1.0 (1.1) (0x00100101) */
@@ -24,49 +29,51 @@
 
 	HDA_GROUP(pin_group, top_group, "jack");
 
-	if (HDA_PIN_GROUP(0x14, group, pin_group, "int-speaker", n, "jack", 4))	/* Pin widget 0x14 */
+	if (HDA_PIN_GROUP(0x14, group, pin_group, "speaker", n, "jack", 4))	/* Pin widget 0x14 */
 	   {
 		/* Src 0xc=front */
+#if 1
+		HDA_SET_PINSELECT(0x14, 0); // Hardwire as output
+#else
 		if (HDA_PINSELECT(0x14, ctl, group, "mode", -1))
 			HDA_CHOICES(ctl, "front-out input");
-		HDA_OUTMUTE(0x14, group, "inmute", UNMUTE);
+#endif
+		HDA_OUTMUTE(0x14, group, "mute", UNMUTE);
 	   }
 
+#if 0
 	if (HDA_PIN_GROUP(0x15, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x15 */
 	   {
 		/* Src 0xd=rear */
 		if (HDA_PINSELECT(0x15, ctl, group, "mode", -1))
 			HDA_CHOICES(ctl, "rear-out input");
-		HDA_OUTMUTE(0x15, group, "inmute", UNMUTE);
+		HDA_OUTMUTE(0x15, group, "mute", UNMUTE);
 	   }
 
 	if (HDA_PIN_GROUP(0x16, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x16 */
 	   {
-		/* Src 0xe=c/lfe */
+		/* Src 0xe=rear */
 		if (HDA_PINSELECT(0x16, ctl, group, "mode", -1))
-			HDA_CHOICES(ctl, "c/lfe-out input");
-		HDA_OUTMUTE(0x16, group, "inmute", UNMUTE);
+			HDA_CHOICES(ctl, "rear-out input");
+		HDA_OUTMUTE(0x16, group, "mute", UNMUTE);
+	   }
+#endif
+
+	if (HDA_PIN_GROUP(0x19, group, pin_group, "mic", n, "jack", 4))	/* Pin widget 0x19 */
+	   {
+		/* Src 0xc=front */
+		/* Src 0xe=rear */
+#if 0
+		if (HDA_PINSELECT(0x19, ctl, group, "mode", -1))
+			HDA_CHOICES(ctl, "front-out rear-out input");
+		// HDA_OUTMUTE(0x19, group, "inmute", UNMUTE);
+#else
+		HDA_SET_PINSELECT(0x19, 2); // Hardwire to input
+#endif 
+		HDA_INAMP(0x19, 0, group, "in", 90);	/* From widget 0x0c */
 	   }
 
-	if (HDA_PIN_GROUP(0x18, group, pin_group, "pink", n, "jack", 4))	/* Pin widget 0x18 */
-	   {
-		/* Src 0xe=c/lfe */
-		if (HDA_PINSELECT(0x18, ctl, group, "mode", -1))
-			HDA_CHOICES(ctl, "c/lfe-out input");
-		HDA_OUTMUTE(0x18, group, "inmute", UNMUTE);
-		HDA_INAMP(0x18, 0, group, "out", 90);	/* From widget 0x0e */
-	   }
-
-	if (HDA_PIN_GROUP(0x19, group, pin_group, "int-mic", n, "jack", 4))	/* Pin widget 0x19 */
-	   {
-		/* Src 0xc=front */
-		/* Src 0xe=c/lfe */
-		if (HDA_PINSELECT(0x19, ctl, group, "mode", -1))
-			HDA_CHOICES(ctl, "front-out c/lfe-out input");
-		HDA_OUTMUTE(0x19, group, "inmute", UNMUTE);
-		HDA_INAMP(0x19, 0, group, "out", 90);	/* From widget 0x0c */
-	   }
-
+#if 0
 	if (HDA_PIN_GROUP(0x1a, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x1a */
 	   {
 		/* Src 0xd=rear */
@@ -74,17 +81,28 @@
 			HDA_CHOICES(ctl, "rear-out input");
 		HDA_OUTMUTE(0x1a, group, "inmute", UNMUTE);
 	   }
+#endif
 
 	if (HDA_PIN_GROUP(0x1b, group, pin_group, "green", n, "jack", 4))	/* Pin widget 0x1b */
 	   {
 		/* Src 0xc=front */
-		/* Src 0xe=c/lfe */
+		/* Src 0xe=rear */
 		if (HDA_PINSELECT(0x1b, ctl, group, "mode", -1))
-			HDA_CHOICES(ctl, "front-out c/lfe-out input");
+			HDA_CHOICES(ctl, "front-out rear-out input");
 		HDA_OUTMUTE(0x1b, group, "inmute", UNMUTE);
 		HDA_INAMP(0x1b, 0, group, "out", 90);	/* From widget 0x0c */
 	   }
 
+	if (HDA_PIN_GROUP(0x18, group, pin_group, "pink", n, "jack", 4))	/* Pin widget 0x18 */
+	   {
+		/* Src 0xe=rear */
+		if (HDA_PINSELECT(0x18, ctl, group, "mode", 1))
+			HDA_CHOICES(ctl, "rear-out input");
+		HDA_OUTMUTE(0x18, group, "mute", UNMUTE);
+		HDA_INAMP(0x18, 0, group, "in", 90);	/* From widget 0x0e */
+	   }
+
+#if 0
 	if (HDA_PIN_GROUP(0x1c, group, pin_group, "black", n, "jack", 4))	/* Pin widget 0x1c */
 	   {
 		if (HDA_PINSELECT(0x1c, ctl, group, "mode", -1))
@@ -96,6 +114,7 @@
 		if (HDA_PINSELECT(0x1d, ctl, group, "mode", -1))
 			HDA_CHOICES(ctl, "input");
 	   }
+#endif
   }
   /* Handle ADC widgets */
   {
@@ -105,69 +124,69 @@
 
 	HDA_GROUP(rec_group, top_group, "record");
 
-	if (HDA_ADC_GROUP(0x08, group, rec_group, "mix", n, "record", 4))	/* ADC widget 0x08 */
+	if (HDA_ADC_GROUP(0x08, group, rec_group, "pcmin0", n, "record", 4))	/* ADC widget 0x08 */
 	   {
 		/* Src 0x23=mix */
-		HDA_INAMP(0x08, 0, group, "mix", 90);	/* From widget 0x23 */
+		HDA_INAMP(0x08, 0, group, "-", 90);	/* From widget 0x23 */
 
 		/* Widget 0x23 (mix) */
 		/* Src 0x18=pink */
-		/* Src 0x19=int-mic */
+		/* Src 0x19=mic */
 		/* Src 0x1a=black */
 		/* Src 0x1b=green */
 		/* Src 0x1c=black */
 		/* Src 0x1d=purple */
-		/* Src 0x14=int-speaker */
+		/* Src 0x14=speaker */
 		/* Src 0x15=black */
 		/* Src 0x16=black */
 		/* Src 0xb=mix */
 		{
 			int amp_group;
 
-			HDA_GROUP(amp_group, group, "mute");
-			HDA_INMUTE(0x23, 0, amp_group, "pink", UNMUTE);	/* From widget 0x18 */
-			HDA_INMUTE(0x23, 1, amp_group, "int-mic", UNMUTE);	/* From widget 0x19 */
-			HDA_INMUTE(0x23, 2, amp_group, "black", UNMUTE);	/* From widget 0x1a */
-			HDA_INMUTE(0x23, 3, amp_group, "green", UNMUTE);	/* From widget 0x1b */
-			HDA_INMUTE(0x23, 4, amp_group, "black", UNMUTE);	/* From widget 0x1c */
-			HDA_INMUTE(0x23, 5, amp_group, "purple", UNMUTE);	/* From widget 0x1d */
-			HDA_INMUTE(0x23, 6, amp_group, "int-speaker", UNMUTE);	/* From widget 0x14 */
-			HDA_INMUTE(0x23, 7, amp_group, "black", UNMUTE);	/* From widget 0x15 */
-			HDA_INMUTE(0x23, 8, amp_group, "black", UNMUTE);	/* From widget 0x16 */
-			HDA_INMUTE(0x23, 9, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+			HDA_GROUP(amp_group, group, "src-mute");
+			HDA_INMUTE(0x23, 0, amp_group, "pink", MUTE);	/* From widget 0x18 */
+			HDA_INMUTE(0x23, 1, amp_group, "mic", UNMUTE);	/* From widget 0x19 */
+			HDA_INMUTE(0x23, 2, amp_group, "black", MUTE);	/* From widget 0x1a */
+			HDA_INMUTE(0x23, 3, amp_group, "green", MUTE);	/* From widget 0x1b */
+			HDA_INMUTE(0x23, 4, amp_group, "black", MUTE);	/* From widget 0x1c */
+			HDA_INMUTE(0x23, 5, amp_group, "purple", MUTE);	/* From widget 0x1d */
+			HDA_INMUTE(0x23, 6, amp_group, "speaker", MUTE);	/* From widget 0x14 */
+			HDA_INMUTE(0x23, 7, amp_group, "black", MUTE);	/* From widget 0x15 */
+			HDA_INMUTE(0x23, 8, amp_group, "black", MUTE);	/* From widget 0x16 */
+			HDA_INMUTE(0x23, 9, amp_group, "input-mixer", MUTE);	/* From widget 0x0b */
 		}
 	   }
 
-	if (HDA_ADC_GROUP(0x09, group, rec_group, "mix", n, "record", 4))	/* ADC widget 0x09 */
+	if (HDA_ADC_GROUP(0x09, group, rec_group, "pcmin1", n, "record", 4))	/* ADC widget 0x09 */
 	   {
 		/* Src 0x22=mix */
-		HDA_INAMP(0x09, 0, group, "mix", 90);	/* From widget 0x22 */
+		HDA_INAMP(0x09, 0, group, "-", 90);	/* From widget 0x22 */
 
 		/* Widget 0x22 (mix) */
 		/* Src 0x18=pink */
-		/* Src 0x19=int-mic */
+		/* Src 0x19=mic */
 		/* Src 0x1a=black */
 		/* Src 0x1b=green */
 		/* Src 0x1c=black */
 		/* Src 0x1d=purple */
-		/* Src 0x14=int-speaker */
+		/* Src 0x14=speaker */
 		/* Src 0x15=black */
 		/* Src 0x16=black */
 		/* Src 0xb=mix */
 		{
 			int amp_group;
 
-			HDA_GROUP(amp_group, group, "mute");
-			HDA_INMUTE(0x22, 0, amp_group, "pink", UNMUTE);	/* From widget 0x18 */
-			HDA_INMUTE(0x22, 1, amp_group, "int-mic", UNMUTE);	/* From widget 0x19 */
-			HDA_INMUTE(0x22, 2, amp_group, "black", UNMUTE);	/* From widget 0x1a */
-			HDA_INMUTE(0x22, 3, amp_group, "green", UNMUTE);	/* From widget 0x1b */
-			HDA_INMUTE(0x22, 4, amp_group, "black", UNMUTE);	/* From widget 0x1c */
-			HDA_INMUTE(0x22, 5, amp_group, "purple", UNMUTE);	/* From widget 0x1d */
-			HDA_INMUTE(0x22, 6, amp_group, "int-speaker", UNMUTE);	/* From widget 0x14 */
-			HDA_INMUTE(0x22, 7, amp_group, "black", UNMUTE);	/* From widget 0x15 */
-			HDA_INMUTE(0x22, 8, amp_group, "black", UNMUTE);	/* From widget 0x16 */
-			HDA_INMUTE(0x22, 9, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+			HDA_GROUP(amp_group, group, "src-mute");
+			HDA_INMUTE(0x22, 0, amp_group, "pink", MUTE);	/* From widget 0x18 */
+			HDA_INMUTE(0x22, 1, amp_group, "mic", MUTE);	/* From widget 0x19 */
+			HDA_INMUTE(0x22, 2, amp_group, "black", MUTE);	/* From widget 0x1a */
+			HDA_INMUTE(0x22, 3, amp_group, "green", MUTE);	/* From widget 0x1b */
+			HDA_INMUTE(0x22, 4, amp_group, "black", MUTE);	/* From widget 0x1c */
+			HDA_INMUTE(0x22, 5, amp_group, "purple", MUTE);	/* From widget 0x1d */
+			HDA_INMUTE(0x22, 6, amp_group, "speaker", MUTE);	/* From widget 0x14 */
+			HDA_INMUTE(0x22, 7, amp_group, "black", MUTE);	/* From widget 0x15 */
+			HDA_INMUTE(0x22, 8, amp_group, "black", MUTE);	/* From widget 0x16 */
+			HDA_INMUTE(0x22, 9, amp_group, "input-mixer", UNMUTE);	/* From widget 0x0b */
 		}
 	   }
   }
@@ -179,43 +198,6 @@
 
 	HDA_GROUP(misc_group, top_group, "misc");
 
-	if (HDA_MISC_GROUP(0x02, group, misc_group, "front", n, "misc", 8))	/* Misc widget 0x02 */
-	   {
-		HDA_OUTAMP(0x02, group, "-", 90);
-	   }
-
-	if (HDA_MISC_GROUP(0x03, group, misc_group, "rear", n, "misc", 8))	/* Misc widget 0x03 */
-	   {
-		HDA_OUTAMP(0x03, group, "-", 90);
-	   }
-
-	if (HDA_MISC_GROUP(0x04, group, misc_group, "center/LFE", n, "misc", 8))	/* Misc widget 0x04 */
-	   {
-		HDA_OUTAMP(0x04, group, "-", 90);
-	   }
-
-	if (HDA_MISC_GROUP(0x0b, group, misc_group, "mix", n, "misc", 8))	/* Misc widget 0x0b */
-	   {
-		/* Src 0x18=c/lfe */
-		/* Src 0x19=int-mic */
-		/* Src 0x1a=rear */
-		/* Src 0x1b=headphone */
-		/* Src 0x1c=speaker */
-		/* Src 0x1d=speaker */
-		/* Src 0x14=front */
-		/* Src 0x15=rear */
-		/* Src 0x16=c/lfe */
-		HDA_INAMP(0x0b, 0, group, "pink", 90);	/* From widget 0x18 */
-		HDA_INAMP(0x0b, 1, group, "int-mic", 90);	/* From widget 0x19 */
-		HDA_INAMP(0x0b, 2, group, "black", 90);	/* From widget 0x1a */
-		HDA_INAMP(0x0b, 3, group, "green", 90);	/* From widget 0x1b */
-		HDA_INAMP(0x0b, 4, group, "black", 90);	/* From widget 0x1c */
-		HDA_INAMP(0x0b, 5, group, "purple", 90);	/* From widget 0x1d */
-		HDA_INAMP(0x0b, 6, group, "int-speaker", 90);	/* From widget 0x14 */
-		HDA_INAMP(0x0b, 7, group, "black", 90);	/* From widget 0x15 */
-		HDA_INAMP(0x0b, 8, group, "black", 90);	/* From widget 0x16 */
-	   }
-
 	if (HDA_MISC_GROUP(0x0c, group, misc_group, "front", n, "misc", 8))	/* Misc widget 0x0c */
 	   {
 		/* Src 0x2=front */
@@ -224,8 +206,8 @@
 			int amp_group;
 
 			HDA_GROUP(amp_group, group, "mute");
-			HDA_INMUTE(0x0c, 0, amp_group, "front", UNMUTE);	/* From widget 0x02 */
-			HDA_INMUTE(0x0c, 1, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+			HDA_INMUTE(0x0c, 0, amp_group, "pcm-front", UNMUTE);	/* From widget 0x02 */
+			HDA_INMUTE(0x0c, 1, amp_group, "input-mixer", UNMUTE);	/* From widget 0x0b */
 		}
 	   }
 
@@ -237,23 +219,60 @@
 			int amp_group;
 
 			HDA_GROUP(amp_group, group, "mute");
-			HDA_INMUTE(0x0d, 0, amp_group, "rear", UNMUTE);	/* From widget 0x03 */
-			HDA_INMUTE(0x0d, 1, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+			HDA_INMUTE(0x0d, 0, amp_group, "pcm-rear", UNMUTE);	/* From widget 0x03 */
+			HDA_INMUTE(0x0d, 1, amp_group, "input-mixer", UNMUTE);	/* From widget 0x0b */
 		}
 	   }
 
-	if (HDA_MISC_GROUP(0x0e, group, misc_group, "c/lfe", n, "misc", 8))	/* Misc widget 0x0e */
+	if (HDA_MISC_GROUP(0x0e, group, misc_group, "rear", n, "misc", 8))	/* Misc widget 0x0e */
 	   {
-		/* Src 0x4=center/LFE */
+		/* Src 0x4=rear */
 		/* Src 0xb=mix */
 		{
 			int amp_group;
 
 			HDA_GROUP(amp_group, group, "mute");
-			HDA_INMUTE(0x0e, 0, amp_group, "center/LFE", UNMUTE);	/* From widget 0x04 */
-			HDA_INMUTE(0x0e, 1, amp_group, "mix", UNMUTE);	/* From widget 0x0b */
+			HDA_INMUTE(0x0e, 0, amp_group, "rear", UNMUTE);	/* From widget 0x04 */
+			HDA_INMUTE(0x0e, 1, amp_group, "input-mixer", UNMUTE);	/* From widget 0x0b */
 		}
 	   }
+
+	if (HDA_MISC_GROUP(0x02, group, misc_group, "pcm-front", n, "misc", 8))	/* Misc widget 0x02 */
+	   {
+		HDA_OUTAMP(0x02, group, "-", 90);
+	   }
+
+	if (HDA_MISC_GROUP(0x03, group, misc_group, "pcm", n, "misc", 8))	/* Misc widget 0x03 */
+	   {
+		HDA_OUTAMP(0x03, group, "-", 0);
+	   }
+
+	if (HDA_MISC_GROUP(0x04, group, misc_group, "pcm-rear", n, "misc", 8))	/* Misc widget 0x04 */
+	   {
+		HDA_OUTAMP(0x04, group, "-", 90);
+	   }
+
+	if (HDA_MISC_GROUP(0x0b, group, misc_group, "input-mixer", n, "misc", 8))	/* Misc widget 0x0b */
+	   {
+		/* Src 0x18=rear */
+		/* Src 0x19=mic */
+		/* Src 0x1a=rear */
+		/* Src 0x1b=headphone */
+		/* Src 0x1c=speaker */
+		/* Src 0x1d=speaker */
+		/* Src 0x14=front */
+		/* Src 0x15=rear */
+		/* Src 0x16=rear */
+		HDA_INAMP(0x0b, 0, group, "pink", 20);	/* From widget 0x18 */
+		HDA_INAMP(0x0b, 1, group, "mic", 20);	/* From widget 0x19 */
+		HDA_INAMP(0x0b, 2, group, "black", 90);	/* From widget 0x1a */
+		HDA_INAMP(0x0b, 3, group, "green", 90);	/* From widget 0x1b */
+		HDA_INAMP(0x0b, 4, group, "black", 90);	/* From widget 0x1c */
+		HDA_INAMP(0x0b, 5, group, "purple", 90);	/* From widget 0x1d */
+		// HDA_INAMP(0x0b, 6, group, "speaker", 90);	/* From widget 0x14 */
+		HDA_INAMP(0x0b, 7, group, "black", 90);	/* From widget 0x15 */
+		HDA_INAMP(0x0b, 8, group, "black", 90);	/* From widget 0x16 */
+	   }
   }
   return 0;
 }
# HG changeset patch
# User Hannu Savolainen <hannu@opensound.com>
# Date 1232688690 -7200
# Node ID 52eeea2910f661024621553e5fd4a1d40cd56341
# Parent  9d67fab8fc2fa245b5fa50f19d24be8d4bfe93b5
Changed year shown in copyright to 2009. Misc hdaudio hacking

diff -r 9d67fab8fc2f -r 52eeea2910f6 kernel/drv/oss_hdaudio/hdaudio_codecids.h
--- a/kernel/drv/oss_hdaudio/hdaudio_codecids.h	Thu Jan 08 13:07:29 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_codecids.h	Fri Jan 23 07:31:30 2009 +0200
@@ -1030,7 +1030,8 @@
 extern int hdaudio_travelmate4060_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 extern int hdaudio_vaio_vgn_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 extern int hdaudio_thinkpad_r61_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
-extern int hdaudio_mac_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
+extern int hdaudio_mac_sigmatel_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
+extern int hdaudio_mac_realtek_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 extern int hdaudio_eeepc_mixer_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group);
 
 static const codec_desc_t subdevices[] = {
@@ -1090,19 +1091,20 @@
 /*
  * Known Macintosh systems
  */
-  {0x106b0800, "Intel Mac V1", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b0700, "Intel Mac V2", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b0600, "Intel Mac V2", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b0200, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b0e00, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b0f00, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b1600, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b1700, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b1e00, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b1a00, "Intel Mac V4", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  // {0x00000100, "Intel Mac V4", VF_NONE, (char **) &stac922xremap, ?, hdaudio_mac_GPIO_init},
-  {0x106b0a00, "Intel Mac V5", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
-  {0x106b2200, "Intel Mac V5", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_GPIO_init},
+  {0x106b0800, "Intel Mac V1", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b0700, "Intel Mac V2", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b0600, "Intel Mac V2", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b0200, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b0e00, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b0f00, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b1600, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b1700, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b1e00, "Intel Mac V3", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b1a00, "Intel Mac V4", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  // {0x00000100, "Intel Mac V4", VF_NONE, (char **) &stac922xremap, ?, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b0a00, "Intel Mac V5", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b2200, "Intel Mac V5", VF_NONE, (char **) &stac922xremap, 0, hdaudio_mac_sigmatel_GPIO_init},
+  {0x106b3200, "Intel iMac", VF_ALC88X_HACK, (char **) &alc883remap, 0, hdaudio_mac_realtek_GPIO_init}, // ALC885
 
   {0, "Unknown"}
 };
diff -r 9d67fab8fc2f -r 52eeea2910f6 kernel/drv/oss_hdaudio/hdaudio_eeepc.c
--- a/kernel/drv/oss_hdaudio/hdaudio_eeepc.c	Thu Jan 08 13:07:29 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_eeepc.c	Fri Jan 23 07:31:30 2009 +0200
@@ -21,6 +21,9 @@
 
   DDB(cmn_err(CE_CONT, "hdaudio_eeepc_mixer_init got called.\n"));
 
+  HDA_OUTAMP(0x02, top_group, "pcm-front", 100);
+  HDA_OUTAMP(0x04, top_group, "pcm-rear", 100);
+
   /* Handle PIN widgets */
   {
 	int n, group, pin_group;
@@ -143,7 +146,7 @@
 		{
 			int amp_group;
 
-			HDA_GROUP(amp_group, group, "src-mute");
+			HDA_GROUP(amp_group, group, "rec-mute");
 			HDA_INMUTE(0x23, 0, amp_group, "pink", MUTE);	/* From widget 0x18 */
 			HDA_INMUTE(0x23, 1, amp_group, "mic", UNMUTE);	/* From widget 0x19 */
 			HDA_INMUTE(0x23, 2, amp_group, "black", MUTE);	/* From widget 0x1a */
@@ -176,7 +179,7 @@
 		{
 			int amp_group;
 
-			HDA_GROUP(amp_group, group, "src-mute");
+			HDA_GROUP(amp_group, group, "rec-mute");
 			HDA_INMUTE(0x22, 0, amp_group, "pink", MUTE);	/* From widget 0x18 */
 			HDA_INMUTE(0x22, 1, amp_group, "mic", MUTE);	/* From widget 0x19 */
 			HDA_INMUTE(0x22, 2, amp_group, "black", MUTE);	/* From widget 0x1a */
@@ -237,6 +240,7 @@
 		}
 	   }
 
+#if 0
 	if (HDA_MISC_GROUP(0x02, group, misc_group, "pcm-front", n, "misc", 8))	/* Misc widget 0x02 */
 	   {
 		HDA_OUTAMP(0x02, group, "-", 90);
@@ -251,6 +255,7 @@
 	   {
 		HDA_OUTAMP(0x04, group, "-", 90);
 	   }
+#endif
 
 	if (HDA_MISC_GROUP(0x0b, group, misc_group, "input-mixer", n, "misc", 8))	/* Misc widget 0x0b */
 	   {
diff -r 9d67fab8fc2f -r 52eeea2910f6 kernel/drv/oss_hdaudio/hdaudio_gpio_handlers.c
--- a/kernel/drv/oss_hdaudio/hdaudio_gpio_handlers.c	Thu Jan 08 13:07:29 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_gpio_handlers.c	Fri Jan 23 07:31:30 2009 +0200
@@ -63,9 +63,25 @@
 	unsigned int subdevice = codec->subvendor_id;
 	unsigned int codec_id = codec->vendor_id;
 
+   	corb_write (mixer, cad, afg, 0, SET_GPIO_DATA, 0xffffffff);
+
 	// TODO: Populate this function with the real stuff
 	
 cmn_err(CE_CONT, "hdaudio_mac_GPIO_init() entered, afg=%d, subdevice=0x%08x, codec=0x%08x\n", afg, subdevice, codec_id);
 
 	return OSS_EAGAIN; /* Continue with the default mixer init */
 }
+
+int
+hdaudio_mac_sigmatel_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group)
+{
+cmn_err(CE_CONT, "iMac Sigmatel hdaudio initialization\n");
+	return hdaudio_mac_GPIO_init(dev, mixer, cad, top_group);
+}
+
+int
+hdaudio_mac_realtek_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group)
+{
+cmn_err(CE_CONT, "iMac Realtek hdaudio initialization\n");
+	return hdaudio_mac_GPIO_init(dev, mixer, cad, top_group);
+}
diff -r 9d67fab8fc2f -r 52eeea2910f6 kernel/framework/sndstat/oss_sndstat.c
--- a/kernel/framework/sndstat/oss_sndstat.c	Thu Jan 08 13:07:29 2009 +0200
+++ b/kernel/framework/sndstat/oss_sndstat.c	Fri Jan 23 07:31:30 2009 +0200
@@ -63,7 +63,7 @@
   sndstat_ptr = 0;
 
   put_status ("OSS " OSS_VERSION_STRING " " OSS_LICENSE);
-  put_status (" (C) 4Front Technologies 1996-2008\n");
+  put_status (" (C) 4Front Technologies 1996-2009\n");
 
   if (riptide_notice)
     put_status ("RipTide Driver (C) 2000, Conexant Systems, Inc.\n");
# HG changeset patch
# User Hannu Savolainen <hannu@opensound.com>
# Date 1233744293 -7200
# Node ID bbd2fa6add21ef287fcd6eb6ea51a23ea4e6f014
# Parent  16fef8dc9f17ff9c2a580f47c784325e6b1df49a
More iMac hacking

diff -r 16fef8dc9f17 -r bbd2fa6add21 kernel/drv/oss_hdaudio/hdaudio_gpio_handlers.c
--- a/kernel/drv/oss_hdaudio/hdaudio_gpio_handlers.c	Sat Jan 24 10:17:51 2009 +0200
+++ b/kernel/drv/oss_hdaudio/hdaudio_gpio_handlers.c	Wed Feb 04 12:44:53 2009 +0200
@@ -63,8 +63,6 @@
 	unsigned int subdevice = codec->subvendor_id;
 	unsigned int codec_id = codec->vendor_id;
 
-   	corb_write (mixer, cad, afg, 0, SET_GPIO_DATA, 0xffffffff);
-
 	// TODO: Populate this function with the real stuff
 	
 cmn_err(CE_CONT, "hdaudio_mac_GPIO_init() entered, afg=%d, subdevice=0x%08x, codec=0x%08x\n", afg, subdevice, codec_id);
@@ -82,6 +80,13 @@
 int
 hdaudio_mac_realtek_GPIO_init (int dev, hdaudio_mixer_t * mixer, int cad, int top_group)
 {
+ 	codec_t *codec = mixer->codecs[cad];
+ 	int afg = codec->afg;	// Audio function group root widget
+
 cmn_err(CE_CONT, "iMac Realtek hdaudio initialization\n");
+
+	corb_write (mixer, cad, afg, 0, SET_GPIO_DIR, 0xffffffff);
+ 	corb_write (mixer, cad, afg, 0, SET_GPIO_ENABLE, 0xffffffff);
+	corb_write (mixer, cad, afg, 0, SET_GPIO_DATA, 0xffffffff);
 	return hdaudio_mac_GPIO_init(dev, mixer, cad, top_group);
 }
# HG changeset patch
# User Hannu Savolainen <hannu@opensound.com>
# Date 1234367953 -7200
# Node ID c5d197fdd68361360fcdce4fac05143d62b7492c
# Parent  7eb7d9670ea7be86b8e339f17f984c9017ab890a
v4.1 pull 090211

diff -r 7eb7d9670ea7 -r c5d197fdd683 cmd/ossinfo/ossinfo.c
--- a/cmd/ossinfo/ossinfo.c	Tue Feb 10 10:41:14 2009 +0200
+++ b/cmd/ossinfo/ossinfo.c	Wed Feb 11 17:59:13 2009 +0200
@@ -41,6 +41,17 @@
 int show_engines = 0;
 int show_ex = 0;
 
+static void
+print_symlink(const char *link)
+{
+	char devname[256];
+
+	memset(devname, 0, sizeof(devname));
+
+	if (readlink(link, devname, sizeof(devname)-1) != -1)
+	   printf("  %s -> %s\n", link, devname);
+}
+
 /*
  * Display filters for selecting what to print.
  */
@@ -434,6 +445,16 @@
 
       printf ("\n");
     }
+
+  printf ("\n");
+  print_symlink ("/dev/dsp");
+  print_symlink ("/dev/dsp_in");
+  print_symlink ("/dev/dsp_out");
+  print_symlink ("/dev/dsp_ac3");
+  print_symlink ("/dev/dsp_mmap");
+  print_symlink ("/dev/dsp_multich");
+  print_symlink ("/dev/dsp_spdifout");
+  print_symlink ("/dev/dsp_spdifin");
 }
 
 
# HG changeset patch
# User Yair K.
# Date 1241934228 -10800
# Node ID 8693942c78874de871bad9ea1218bcdab194d15d
# Parent  59c8f1936bd6be591bd7199cbfe11cf692a94e59
Fixed gcc4.4 related warnings

diff -r 59c8f1936bd6 -r 8693942c7887 kernel/drv/oss_envy24/oss_envy24.c
--- a/kernel/drv/oss_envy24/oss_envy24.c	Sun May 10 08:42:12 2009 +0300
+++ b/kernel/drv/oss_envy24/oss_envy24.c	Sun May 10 08:43:48 2009 +0300
@@ -293,8 +293,9 @@
 	    for (ch = 0; ch < portc->channels; ch++)
 	      {
 		short s = (short) (((*(unsigned short *) ip & 0xff) << 8) |
-				   ((*(unsigned short *) ip++ & 0xff00) >>
+				   ((*(unsigned short *) ip & 0xff00) >>
 				    8));
+		ip++;
 		*p++ = s << 16;
 	      }
 	  }
diff -r 59c8f1936bd6 -r 8693942c7887 kernel/drv/oss_imux/oss_imux.c
--- a/kernel/drv/oss_imux/oss_imux.c	Sun May 10 08:42:12 2009 +0300
+++ b/kernel/drv/oss_imux/oss_imux.c	Sun May 10 08:43:48 2009 +0300
@@ -475,7 +475,7 @@
   oss_audio_ioctl (devc->hw_dev, NULL, SNDCTL_DSP_GETBLKSIZE,
 		   (ioctl_arg) & devc->fragsize);
 
-  if ((!devc->hw_fmt & SUPPORTED_FORMATS))
+  if (!(devc->hw_fmt & SUPPORTED_FORMATS))
     {
       oss_audio_release (devc->hw_dev, &devc->finfo);
       cmn_err (CE_WARN,

